#SentinelaApolo/docker-compose.yml
services:
  db:
    image: postgres:17
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  django-web:
    build: .
    container_name: django-docker
    entrypoint: /app/entrypoint.prod.sh
    volumes:
      - ./static:/app/staticfiles
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - TZ=${TZ}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000"]
      interval: 10s
      timeout: 10s
      retries: 3

  frontend-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
    depends_on:
      django-web:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge